- name: Install dependencies
  hosts: localhost
  become: true

  tasks:
    - name: Install curl
      apt:
        name: curl
        state: present

    - name: Install sshd
      apt:
        name: openssh-server
        state: present

    - name: Restart sshd service
      service:
        name: sshd
        state: restarted

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Install Minikube
      shell: curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && sudo install minikube-linux-amd64 /usr/local/bin/minikube

    - name: Install kubectl
      shell: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && sudo install kubectl /usr/local/bin/

    - name: Add Kubernetes repository key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install Helm
      shell: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash


- name: Configure SSH
  hosts: localhost
  become: true


  vars:
    user_name: cloudru
    user_password: cloudpass
    ssh_key: "{{ lookup('file', 'id_rsa.pub') }}"

  tasks:
    - name: Create user
      user:
        name: "{{ user_name }}"
        password: "{{ user_password | password_hash('sha512') }}"
        shell: /bin/bash
        createhome: yes

    - name: Allow ssh login with key
      authorized_key:
        user: "{{ user_name }}"
        state: present
        key: "{{ ssh_key }}"

    - name: Disable root ssh login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present

    - name: Copy public key for user
      copy:
        content: "{{ ssh_key }}"
        dest: "/home/{{ user_name }}/.ssh/id_rsa.pub"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: '0600'

    - name: Restart sshd service
      service:
        name: sshd
        state: restarted
